name: AutoPack

on:
  workflow_dispatch: {}
  push:
    branches:
    - main
    paths:
    - Resourcepack/**
    - Default/minecraft/**

env:
  # Pterodactyl Panel
  panel_domain: ${{ secrets.DOMAIN }}
  # Pterodactyl SFTP
  sftp_user: ${{ secrets.SFTP_USER }}
  sftp_pass: ${{ secrets.SFTP_PASS }}
  sftp_host: ${{ secrets.SFTP_HOST }}
  sftp_port: ${{ secrets.SFTP_PORT }}
  token: ${{ secrets.APIToken }}
  # Pterodactyl Builder
  server_uuid: ${{ secrets.SERVERUUID }}
  server_uuid_full: ${{ secrets.SERVERFULLUUID }}
  # Fix folder permission without restart the server
  cli_user: ${{ secrets.CLIUSERNAME }}
  cli_key: ${{ secrets.CLIKEY }}
  cli_port: ${{ secrets.CLIPORT }}
  cli_ip: ${{ secrets.CLIIP }}
  # Validator Config Path
  config_json: .github/configs/schema.json
  config_yaml: .github/configs/yaml-linter.yml

jobs:
  Validator:
    name: Validator ${{ matrix.PackName }}
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'chore: Publish') == false &&
      github.repository == 'xMikux/Slimefun-Resourcepack'

    strategy:
      matrix:
        include:
          - PackName: Minecraft
            Path_Models: Resourcepack/contents/_iainternal/resourcepack/assets/minecraft/**/*.json
          - PackName: Bump
            Path_Models: Resourcepack/contents/bump/resourcepack/bump/models/**/*.json
            Path_Pack: Resourcepack/contents/bump/configs/textures.yml
          - PackName: ExoticGarden
            Path_Models: Resourcepack/contents/exotic_garden/resourcepack/exotic_garden/models/**/*.json
            Path_Pack: Resourcepack/contents/exotic_garden/configs/textures.yml
          - PackName: ExtraGear
            Path_Models: Resourcepack/contents/extra_gear/resourcepack/extra_gear/models/**/*.json
            Path_Pack: Resourcepack/contents/extra_gear/configs/textures.yml
          - PackName: FluffyMachines
            Path_Models: Resourcepack/contents/fluffymachines/resourcepack/fluffymachines/models/**/*.json
            Path_Pack: Resourcepack/contents/fluffymachines/configs/textures.yml
          - PackName: FoxyMachines
            Path_Models: Resourcepack/contents/foxymachines/resourcepack/foxymachines/models/**/*.json
            Path_Pack: Resourcepack/contents/foxymachines/configs/textures.yml
          - PackName: InfinityExpansion
            Path_Models: Resourcepack/contents/infinityexpansion/resourcepack/infinityexpansion/models/**/*.json
            Path_Pack: Resourcepack/contents/infinityexpansion/configs/textures.yml
          - PackName: Litexpansion
            Path_Models: Resourcepack/contents/litexpansion/resourcepack/litexpansion/models/**/*.json
            Path_Pack: Resourcepack/contents/litexpansion/configs/textures.yml
          - PackName: SimpleUtils
            Path_Models: Resourcepack/contents/simpleutils/resourcepack/simpleutils/models/**/*.json
            Path_Pack: Resourcepack/contents/simpleutils/configs/textures.yml
          - PackName: Slimefun
            Path_Models: Resourcepack/contents/slimefun/resourcepack/slimefun/models/**/*.json
            Path_Pack: Resourcepack/contents/slimefun/configs/textures.yml
          - PackName: SlimyTreeTaps
            Path_Models: Resourcepack/contents/slimy_tree_taps/resourcepack/slimy_tree_taps/models/**/*.json
            Path_Pack: Resourcepack/contents/slimy_tree_taps/configs/textures.yml

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0

      - name: ‚öô Validate YAML Files (${{ matrix.PackName }})
        if: "${{ matrix.Path_Pack != '' }}"
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: ${{ matrix.Path_Pack }}
          config_file: ${{ env.config_yaml }}

      - name: ‚öô Validate JSON Files (${{ matrix.PackName }})
        if: "${{ matrix.Path_Models != '' }}"
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: ${{ matrix.Path_Models }}

  Upload-Git-IAPack:
    name: "Upload-Git-IAPack"
    needs: Validator
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, '[ci skip]') == false

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0

      - name: üóú Setup Workdir IAPack
        run: |
          echo "Make Workdir..."
          mkdir workdir
          echo "Copy the setup..."
          cp -r Resourcepack/contents workdir
      
      - name: üóú Compress IAPack
        run: |
          echo "Compress..."
          tar --owner=pterodactyl --group=pterodactyl -cjf IAUpdate.tar.bz2 -C ./workdir .

      - name: ‚ö° Upload IAPack to Server
        run: |
          curl -u "${{ env.sftp_user }}.${{ env.server_uuid }}:${{ env.sftp_pass }}" \
          -T IAUpdate.tar.bz2 \
          -k "sftp://${{ env.sftp_host }}:${{ env.sftp_port }}/plugins/ItemsAdder/IAUpdate.tar.bz2"

      - name: ‚ôªÔ∏è Delete Old IA Files
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.server_uuid }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/",
          "files": [
            "contents"
            ]
          }'

      - name: üì§ UnArchive New IA Files
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.server_uuid }}/files/decompress" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/",
          "file": "IAUpdate.tar.bz2"
          }'

      - name: ‚ôªÔ∏è Cleanup Archive File
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.server_uuid }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/",
          "files": [
            "IAUpdate.tar.bz2"
            ]
          }'

      # Fix folder Permission
      # Issues Link: https://github.com/pterodactyl/panel/issues/3689
      - name: üìÅ Temporary using remote to fix folder permission
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ env.cli_ip }}
          username: ${{ env.cli_user }}
          key: ${{ env.cli_key }}
          port: ${{ env.cli_port }}
          script: |
            sudo chown -R pterodactyl:pterodactyl /var/lib/pterodactyl/volumes/${{ env.server_uuid_full }}/plugins/ItemsAdder/contents/

      - name: üí§ Sleep for 3 seconds
        run: sleep 3s

      - name: ‚åò IAReload Resourcepack
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.server_uuid }}/command" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "command": "iareload"
          }'

      - name: üí§ Sleep for 8 seconds
        run: sleep 8s

      - name: ‚ôªÔ∏è Clean IA Cache
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.server_uuid }}/command" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "command": "iacleancache items"
          }'

      - name: üí§ Sleep for 3 seconds
        run: sleep 3s

      - name: ‚åò IAZip Resourcepack
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.server_uuid }}/command" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "command": "iazip"
          }'

      - name: Upload Item Models
        uses: actions/upload-artifact@v2
        with:
          name: item-models.yml
          path: ./Resourcepack/item-models.yml

  Download-Server-Pack:
    name: "Download-Server-Pack"
    needs: Upload-Git-IAPack
    runs-on: ubuntu-latest
    env:
      working-directory: ./

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0
        with:
          ref: pack

      - name: üí§ Sleep for 5 seconds
        run: sleep 5s

      - name: üì• Download ZIP Pack
        run: |
          curl -u "${{ env.sftp_user }}.${{ env.server_uuid }}:${{ env.sftp_pass }}" \
          -k "sftp://${{ env.sftp_host }}:${{ env.sftp_port }}/plugins/ItemsAdder/output/generated.zip" \
          -o generated.zip
        working-directory: ${{ env.working-directory }}

      - name: üîß Replace Pack files
        run: |
          rm -r assets
          rm pack.mcmeta
          rm pack.png
          unzip generated.zip
        working-directory: ${{ env.working-directory }}

      - name: üîß Remove unnecessary files
        run: |
          rm -r assets/_iainternal
          rm -r assets/minecraft/optifine/cit/ia_generated_armors
          rm -r assets/minecraft/shaders
          rm -r assets/minecraft/blockstates
          rm -r assets/minecraft/font
          rm -r assets/minecraft/lang
          rm -r assets/minecraft/models/block
          rm -r assets/minecraft/models/item/base
          rm -r assets/minecraft/textures
        working-directory: ${{ env.working-directory }}

      - name: üí§ Sleep for 2 seconds
        run: |
          rm ${{ env.working-directory }}generated.zip
          sleep 2s

      - name: üß∞ Setup git config
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: üéâ Commit and Push Pack
        continue-on-error: true
        run: |
          git add assets
          git add pack.mcmeta
          git add pack.png
          git commit -S -m "ci: Auto Texture Pack Update (${GITHUB_SHA::7})"
          git push origin pack
        working-directory: ${{ env.working-directory }}

  Pack-Resourcepack:
    name: "Pack-Resourcepack"
    needs: Download-Server-Pack
    runs-on: ubuntu-latest

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0
        with:
          ref: pack
          fetch-depth: 0

      - name: Checking Repo Again
        run: |
          git fetch 
          git pull

      - name: üì• Package & Optimize Resourcepack
        uses: ComunidadAylas/PackSquash-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allow_optifine_mod: true
          never_store_squash_times: true
          artifact_name: Slimefun-ResourcePack
          path: ./

  Per-Release:
    needs: Pack-Resourcepack
    runs-on: ubuntu-latest

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0
      
      - name: ‚òÅ DownloadArtifact
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Make Checksum
        run: |
          mv Slimefun-ResourcePack/pack.zip Slimefun-ResourcePack/Slimefun-ResourcePack.zip
          mv Slimefun-ResourcePack/Slimefun-ResourcePack.zip .
          mv item-models.yml item-model
          mv item-model/item-models.yml .
          SUM0=$(sha256sum Slimefun-ResourcePack.zip)
          SUM1=$(sha256sum item-models.yml)
          echo -e "$SUM0\n$SUM1" > checksums.txt

      - name: Create & Upload Per Releases 
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-build"
          prerelease: true
          title: "Beta Pack"
          files: |
            Slimefun-ResourcePack.zip
            item-models.yml
            checksums.txt
