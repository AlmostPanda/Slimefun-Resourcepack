name: AutoPack

on:
  workflow_dispatch: {}
  push:
    branches:
    - main
    paths:
    - Resourcepack/**
    - Default/minecraft/**

env:
  # Pterodactyl Panel
  panel_domain: ${{ secrets.DOMAIN }}
  # Pterodactyl SFTP
  sftp_user: ${{ secrets.SFTP_USER }}
  sftp_pass: ${{ secrets.SFTP_PASS }}
  sftp_host: ${{ secrets.SFTP_HOST }}
  sftp_port: ${{ secrets.SFTP_PORT }}
  token: ${{ secrets.APIToken }}
  # Pterodactyl Builder-01
  server_uuid: SERVERUUID
  server_uuid_full: SERVERFULLUUID
  # Pterodactyl Builder-02
  server_uuid_02: SERVERUUID_02
  server_uuid_full_02: SERVERFULLUUID_02
  # Temporary Fix folder Permission
  cli_user: ${{ secrets.CLIUSERNAME }}
  cli_key: ${{ secrets.CLIKEY }}
  cli_port: ${{ secrets.CLIPORT }}
  cli_ip: ${{ secrets.CLIIP }}
  # Validator Config Path
  config_json: .github/configs/schema.json
  config_yaml: .github/configs/yaml-linter.yml

jobs:
  Validator:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'chore: Publish') == false &&
      github.repository == 'xMikux/Slimefun-Resourcepack'

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0

      - name: ‚öô Validate YAML Files
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: Resourcepack/items_packs/**/*.yml
          config_file: ${{ env.config_yaml }}

      - name: ‚öô Validate JSON Files (minecraft)
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: |
            Default/minecraft/**/*.json

      - name: ‚öô Validate JSON Files (ExoticGarden)
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: |
            Resourcepack/resource_pack/assets/exotic_garden/models/**/*.json

      - name: ‚öô Validate JSON Files (InfinityExpansion)
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: |
            Resourcepack/resource_pack/assets/infinityexpansion/models/**/*.json

      - name: ‚öô Validate JSON Files (LiteXpansion)
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: |
            Resourcepack/resource_pack/assets/litexpansion/models/**/*.json

      - name: ‚öô Validate JSON Files (Slimefun)
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: |
            Resourcepack/resource_pack/assets/slimefun/models/slimefun/**/*.json

      - name: ‚öô Validate JSON Files (SlimyTreeTaps)
        uses: nhalstead/validate-json-action@0.1.3
        with:
          schema: ${{ env.config_json }}
          jsons: |
            Resourcepack/resource_pack/assets/slimy_tree_taps/models/**/*.json

  Upload-Git-IAPack:
    name: "Upload-Git-IAPack (${{ matrix.name }})"
    needs: Validator
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'schedule' &&
      contains(github.event.head_commit.message, '*: [ci skip]') == false &&
      contains(github.event.head_commit.message, '*(*): [ci skip]') == false
    env:
      sv_uuid: ${{secrets[matrix.server_uuid]}}
      sv_uuid_full: ${{secrets[matrix.server_uuid_full]}}
    strategy:
      matrix:
       include:
         - name: "Original"
           server_uuid: SERVERUUID
           server_uuid_full: SERVERFULLUUID
         - name: "Optifine"
           server_uuid: SERVERUUID_02
           server_uuid_full: SERVERFULLUUID_02

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0
      
      - name: üóú ZIP IAPack
        run: |
          mkdir workdir
          cp -r Resourcepack/items_packs workdir
          cp -r Resourcepack/resource_pack workdir
          cp -r Default/minecraft workdir/resource_pack/assets
          rm -r workdir/resource_pack/assets/minecraft/optifine
          tar --owner=pterodactyl --group=pterodactyl -cjf IAUpdate.tar.bz2 -C ./workdir .

      - name: üóú ZIP IAPack with "Optifine"
        if: |
          matrix.name == 'Optifine'
        run: |
          rm IAUpdate.tar.bz2
          cp -r Default/minecraft workdir/resource_pack/assets
          tar --owner=pterodactyl --group=pterodactyl -cjf IAUpdate.tar.bz2 -C ./workdir .

      - name: ‚ö° Upload IAPack to Server
        run: |
          curl -u "${{ env.sftp_user }}.${{ env.sv_uuid }}:${{ env.sftp_pass }}" \
          -T IAUpdate.tar.bz2 \
          -k "sftp://${{ env.sftp_host }}:${{ env.sftp_port }}/plugins/ItemsAdder/data/IAUpdate.tar.bz2"

      - name: ‚ôªÔ∏è Delete Old IA Files
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.sv_uuid }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/data/",
          "files": [
            "items_packs",
            "resource_pack"
            ]
          }'

      - name: ‚ôªÔ∏è Clean IA Cache
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.sv_uuid }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/",
          "files": [
            "storage"
            ]
          }'

      - name: üì§ UnArchive New IA Files
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.sv_uuid }}/files/decompress" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/data/",
          "file": "IAUpdate.tar.bz2"
          }'

      - name: ‚ôªÔ∏è Cleanup Archive File
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.sv_uuid }}/files/delete" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "root": "/plugins/ItemsAdder/data/",
          "files": [
            "IAUpdate.tar.bz2"
            ]
          }'

      # Temporary Fix folder Permission
      # Issues Link: https://github.com/pterodactyl/panel/issues/3689
      - name: üìÅ Temporary using remote to fix folder permission
        uses: xMikux/ssh-action@master
        with:
          host: ${{ env.cli_ip }}
          username: ${{ env.cli_user }}
          key: ${{ env.cli_key }}
          port: ${{ env.cli_port }}
          script: |
            sudo chown -R pterodactyl:pterodactyl /var/lib/pterodactyl/volumes/${{ env.sv_uuid_full }}/plugins/ItemsAdder/data/

      - name: üí§ Sleep for 3 seconds
        run: sleep 3s

      - name: ‚åò IAReload Resourcepack
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.sv_uuid }}/command" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "command": "iareload"
          }'

      - name: üí§ Sleep for 8 seconds
        run: sleep 8s

      - name: ‚åò IAZip Resourcepack
        run: |
          curl "https://${{ env.panel_domain }}/api/client/servers/${{ env.sv_uuid }}/command" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ env.token }}' \
          -X POST \
          -d '{
          "command": "iazip"
          }'

  Download-Server-Pack:
    name: "Download-Server-Pack (${{ matrix.name }})"
    needs: Upload-Git-IAPack
    runs-on: ubuntu-latest
    env:
      working-directory: ./.pack
      sv_uuid: ${{secrets[matrix.server_uuid]}}
      sv_uuid_full: ${{secrets[matrix.server_uuid_full]}}
    strategy:
      matrix:
       include:
         - name: "Original"
           server_uuid: SERVERUUID
           server_uuid_full: SERVERFULLUUID
         - name: "Optifine"
           server_uuid: SERVERUUID_02
           server_uuid_full: SERVERFULLUUID_02

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0

      - name: üí§ Sleep for 5 seconds
        run: sleep 5s

      - name: üì• Download ZIP Pack
        run: |
          curl -u "${{ env.sftp_user }}.${{ env.sv_uuid }}:${{ env.sftp_pass }}" \
          -k "sftp://${{ env.sftp_host }}:${{ env.sftp_port }}/plugins/ItemsAdder/data/resource_pack/pack.zip" \
          -o pack.zip
        working-directory: ${{ env.working-directory }}

      - name: üîß Replace Pack files
        run: |
          rm -r assets
          rm pack.mcmeta
          rm pack.png
          unzip pack.zip
          mv pack.zip Slimefun-ResourcePack-${{ matrix.name }}.zip
        working-directory: ${{ env.working-directory }}

      - name: Upload ${{ matrix.name }} pack
        uses: actions/upload-artifact@v2
        with:
          name: Slimefun-ResourcePack-${{ matrix.name }}
          path: ./.pack/Slimefun-ResourcePack-${{ matrix.name }}.zip

      - name: Upload Item Models
        uses: actions/upload-artifact@v2
        with:
          name: item-models.yml
          path: ./Resourcepack/item-models.yml

      - name: üí§ Sleep for 2 seconds
        run: |
          rm ./.pack/Slimefun-ResourcePack-${{ matrix.name }}.zip
          sleep 2s

      - name: üß∞ Setup git config
        if: |
          matrix.name != 'Optifine'
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: üéâ Commit and Push Pack
        continue-on-error: true
        if: |
          matrix.name != 'Optifine'
        run: |
          git add assets
          git add pack.mcmeta
          git add pack.png
          git commit -S -m "ci: Auto Texture Pack Update (${GITHUB_SHA::7})"
          git push origin main
        working-directory: ${{ env.working-directory }}

  Pack-Resourcepack:
    name: "Pack-Resourcepack (${{ matrix.name }})"
    needs: Download-Server-Pack
    runs-on: ubuntu-latest
    env:
      sv_uuid: ${{secrets[matrix.server_uuid]}}
      sv_uuid_full: ${{secrets[matrix.server_uuid_full]}}
    strategy:
      matrix:
       include:
         - name: "Original"
           server_uuid: SERVERUUID
           server_uuid_full: SERVERFULLUUID
         - name: "Optifine"
           server_uuid: SERVERUUID_02
           server_uuid_full: SERVERFULLUUID_02

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0
        with:
          fetch-depth: 0

      - name: Checking Repo Again
        run: |
          git fetch 
          git pull

      - name: Download Optifine Version Pack
        if: |
          matrix.name == 'Optifine'
        run: |
          rm -r assets
          rm pack.mcmeta
          rm pack.png
          curl -u "${{ env.sftp_user }}.${{ env.sv_uuid }}:${{ env.sftp_pass }}" \
          -k "sftp://${{ env.sftp_host }}:${{ env.sftp_port }}/plugins/ItemsAdder/data/resource_pack/pack.zip" \
          -o pack.zip
          unzip pack.zip
          rm pack.zip
        working-directory: ./.pack

      - name: üì• Package & Optimize Resourcepack
        uses: ComunidadAylas/PackSquash-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allow_optifine_mod: true
          path: ./.pack

      - name: ‚òÅ DownloadArtifact
        uses: actions/download-artifact@v2
        with:
          name: Optimized pack
          path: ./

      - name: üìù Rename Resourcepack
        run: |
          mv ./pack.zip Slimefun-ResourcePack-${{ matrix.name }}-Optimized.zip

      - name: Upload Optimized pack
        uses: actions/upload-artifact@v2
        with:
          name: Slimefun-ResourcePack-${{ matrix.name }}-Optimized
          path: ./Slimefun-ResourcePack-${{ matrix.name }}-Optimized.zip

      # - name: Delete Optimized pack
      #   if: |
      #     matrix.name == 'Optifine'
      #   uses: geekyeggo/delete-artifact@v1
      #   with:
      #     name: |
      #       Optimized pack

  Per-Release:
    needs: Pack-Resourcepack
    runs-on: ubuntu-latest

    steps:
      - name: üìÑ Checking Repostiory
        uses: actions/checkout@v2.0.0
      
      - name: ‚òÅ DownloadArtifact
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Make Checksum
        run: |
          mv Slimefun-ResourcePack-Original/Slimefun-ResourcePack-Original.zip .
          mv Slimefun-ResourcePack-Original-Optimized/Slimefun-ResourcePack-Original-Optimized.zip .
          mv Slimefun-ResourcePack-Optifine/Slimefun-ResourcePack-Optifine.zip .
          mv Slimefun-ResourcePack-Optifine-Optimized/Slimefun-ResourcePack-Optifine-Optimized.zip .
          mv item-models.yml item-model
          mv item-model/item-models.yml .
          SUM=$(sha256sum Slimefun-ResourcePack-Original.zip)
          SUM1=$(sha256sum Slimefun-ResourcePack-Original-Optimized.zip)
          SUM2=$(sha256sum Slimefun-ResourcePack-Optifine.zip)
          SUM3=$(sha256sum Slimefun-ResourcePack-Optifine-Optimized.zip)
          SUM4=$(sha256sum item-models.yml)
          echo -e "$SUM\n$SUM1\n$SUM2\n$SUM3\n$SUM4" > checksums.txt

      - name: Create & Upload Per Releases 
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Beta Pack"
          files: |
            Slimefun-ResourcePack-Original.zip
            Slimefun-ResourcePack-Original-Optimized.zip
            Slimefun-ResourcePack-Optifine.zip
            Slimefun-ResourcePack-Optifine-Optimized.zip
            item-models.yml
            checksums.txt
